{
  "name": "is-online",
  "version": "5.1.1",
  "description": "Check if the internet connection is up",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/sindresorhus/is-online"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "contributors": [
    {
      "name": "silverwind",
      "email": "me@silverwind.io",
      "url": "github.com/silverwind"
    }
  ],
  "browser": "browser.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "node test.js"
  },
  "files": [
    "index.js",
    "browser.js",
    "hostnames.js"
  ],
  "keywords": [
    "browser",
    "online",
    "offline",
    "is-online",
    "network",
    "connected",
    "connectivity",
    "internet",
    "is",
    "has",
    "detect",
    "hostname",
    "hostnames",
    "dns",
    "socket",
    "reachable",
    "reachability",
    "accessible"
  ],
  "dependencies": {
    "is-reachable": "^1.3.0",
    "onetime": "^1.1.0",
    "random-item": "^1.0.0",
    "root-hints": "^1.0.0"
  },
  "devDependencies": {
    "ava": "0.0.4"
  },
  "readme": "# is-online [![Build Status](https://travis-ci.org/sindresorhus/is-online.svg?branch=master)](https://travis-ci.org/sindresorhus/is-online)\n\n> Check if the internet connection is up\n\nWorks in Node.js and the browser *(with [browserify](http://browserify.org))*.\n\nIn the browser you have [`navigator.onLine`](https://developer.mozilla.org/en-US/docs/Web/API/NavigatorOnLine.onLine), but it's useless as it only tells you if there's a local connection, and not whether the internet is accessible.\n\n\n## Install\n\n```\n$ npm install --save is-online\n```\n\n\n## Usage\n\n```js\nvar isOnline = require('is-online');\n\nisOnline(function(err, online) {\n\tconsole.log(online);\n\t//=> true\n});\n```\n\n\n## Node API\n\n### isOnline(callback)\n\n#### callback(error, online)\n\n*Required*  \nType: `function`\n\n`error` is there only by Node.js convention and is always `null`.\n\n\n## Browser API\n\nSame as above except the `callback` doesn't have an `error` parameter.\n\n\n## How it works\n\nIn node, we first contact one of the thirteen [root servers](https://www.iana.org/domains/root/servers) and ask them to direct us to the servers which host the `<root>` zone (Which they are themselves). If the server answers, we return an online status.\n\nIf no satisfying answer is given within one second, we return an offline status. In the rare case where an firewall intercepts the packet and answers it on its behalf, a second check is run which tries to connect to a series of popular web sites on port 80. If one of these connects, we return online, otherwise offline status.\n\nIn the browser, a sophisticated check like in node is not possible because DNS and sockets are abstracted away. We use a check which requests an uncached `favicon.ico` on a series of popular websites. If one of this checks succeeds, we return online status. If all the requests fail, we return offline status.\n\n\n## Contributors\n\n- [silverwind](https://github.com/silverwind)\n\n\n## Related\n\n- [is-online-cli](https://github.com/sindresorhus/is-online-cli) - CLI for this module\n- [is-reachable](https://github.com/sindresorhus/is-reachable) - Check if servers are reachable\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/sindresorhus/is-online/issues"
  },
  "_id": "is-online@5.1.1",
  "dist": {
    "shasum": "a6d46192b654d531cfb8b136e9b3c430122ec96d"
  },
  "_from": "is-online@",
  "_resolved": "https://registry.npmjs.org/is-online/-/is-online-5.1.1.tgz"
}
